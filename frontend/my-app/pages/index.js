import Head from "next/head";
import Image from "next/image";
import localFont from "next/font/local";
import styles from "@/styles/Home.module.css";
import ProductCard from "@/components/resource_card";
import { useEffect, useState } from "react";
// import ResponsiveAppBar from "@/components/header";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

const callAPI = async () => {
  try {
    const res = await fetch(`http://127.0.0.1:8000/api/resources`);
    const data = await res.json();
    return data;
  } catch (err) {
    console.error("Error fetching data:", err);
    return [];
  }
};

export default function Home() {
  const [resources, setResources] = useState([]);
  const [pageTitle, setPageTitle] = useState("Loading...");

  useEffect(() => {
    const fetchData = async () => {
      const data = await callAPI();
      if (data && data.length > 0) {
        setResources(data);
        setPageTitle(data[0].title || "Resources");
      } else {
        setPageTitle("No Resources Available");
      }
    };
    fetchData();
  }, []);
  console.log(resources)
  return (
    <>
    {/* <ResponsiveAppBar/> */}
      <Head>
        <title>{pageTitle}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={`${styles.page} ${geistSans.variable} ${geistMono.variable}`}>
        <main className={styles.main}>
          <Image
            className={styles.logo}
            src="/next.svg"
            alt="Next.js logo"
            width={180}
            height={38}
            priority
          />
          <div>
            <h2>Resources</h2>
            <div className={styles.resources}>
              {resources.length > 0 ? (
                resources.map((resource, index) => (
                  <ProductCard
                  image="https://images.unsplash.com/photo-1593121925328-369cc8459c08?auto=format&fit=crop&w=286"
                  title={resource.title}
                  description={resource.description}
                  price="2,900 THB"
                  stock={7}
                />                
                ))
              ) : (
                <p>No resources available.</p>
              )}
            </div>
          </div>
        </main>
      </div>
    </>
  );
}
